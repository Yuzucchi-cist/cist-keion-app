// Mocks generated by Mockito 5.4.1 from annotations
// in cist_keion_app/test/feature/reservation/data/repositories/reservation_repository_impl_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:cist_keion_app/core/network/network_info.dart' as _i10;
import 'package:cist_keion_app/feature/reservation/data/datasources/reservation_local_data_source.dart'
    as _i9;
import 'package:cist_keion_app/feature/reservation/data/datasources/reservation_remote_data_source.dart'
    as _i6;
import 'package:cist_keion_app/feature/reservation/data/factories/institute_time_factory.dart'
    as _i3;
import 'package:cist_keion_app/feature/reservation/data/factories/reservation_factory.dart'
    as _i11;
import 'package:cist_keion_app/feature/reservation/data/factories/reserved_member_factory.dart'
    as _i2;
import 'package:cist_keion_app/feature/reservation/data/models/reservation_model.dart'
    as _i4;
import 'package:cist_keion_app/feature/reservation/domain/entities/reservation.dart'
    as _i5;
import 'package:cloud_firestore/cloud_firestore.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeReservedMemberFactory_0 extends _i1.SmartFake
    implements _i2.ReservedMemberFactory {
  _FakeReservedMemberFactory_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInstituteTimeFactory_1 extends _i1.SmartFake
    implements _i3.InstituteTimeFactory {
  _FakeInstituteTimeFactory_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReservationModel_2 extends _i1.SmartFake
    implements _i4.ReservationModel {
  _FakeReservationModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReservation_3 extends _i1.SmartFake implements _i5.Reservation {
  _FakeReservation_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ReservationRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockReservationRemoteDataSource extends _i1.Mock
    implements _i6.ReservationRemoteDataSource {
  MockReservationRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i4.ReservationModel>> getReservationsBetween(
    _i8.Timestamp? startDate,
    _i8.Timestamp? endDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReservationsBetween,
          [
            startDate,
            endDate,
          ],
        ),
        returnValue: _i7.Future<List<_i4.ReservationModel>>.value(
            <_i4.ReservationModel>[]),
      ) as _i7.Future<List<_i4.ReservationModel>>);
  @override
  _i7.Future<void> addReservations(List<_i4.ReservationModel>? reservations) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReservations,
          [reservations],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> deleteReservations(List<String>? reservationIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteReservations,
          [reservationIds],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [ReservationLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockReservationLocalDataSource extends _i1.Mock
    implements _i9.ReservationLocalDataSource {
  MockReservationLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> cacheReservations(List<_i4.ReservationModel>? models) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheReservations,
          [models],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<List<_i4.ReservationModel>> getReservations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getReservations,
          [],
        ),
        returnValue: _i7.Future<List<_i4.ReservationModel>>.value(
            <_i4.ReservationModel>[]),
      ) as _i7.Future<List<_i4.ReservationModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i10.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [ReservationFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockReservationFactory extends _i1.Mock
    implements _i11.ReservationFactory {
  MockReservationFactory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ReservedMemberFactory get reservedMemberFactory => (super.noSuchMethod(
        Invocation.getter(#reservedMemberFactory),
        returnValue: _FakeReservedMemberFactory_0(
          this,
          Invocation.getter(#reservedMemberFactory),
        ),
      ) as _i2.ReservedMemberFactory);
  @override
  _i3.InstituteTimeFactory get instituteTimeFactory => (super.noSuchMethod(
        Invocation.getter(#instituteTimeFactory),
        returnValue: _FakeInstituteTimeFactory_1(
          this,
          Invocation.getter(#instituteTimeFactory),
        ),
      ) as _i3.InstituteTimeFactory);
  @override
  _i4.ReservationModel convertToModel(_i5.Reservation? entity) =>
      (super.noSuchMethod(
        Invocation.method(
          #convertToModel,
          [entity],
        ),
        returnValue: _FakeReservationModel_2(
          this,
          Invocation.method(
            #convertToModel,
            [entity],
          ),
        ),
      ) as _i4.ReservationModel);
  @override
  _i5.Reservation create(_i11.ReservationParams? params) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [params],
        ),
        returnValue: _FakeReservation_3(
          this,
          Invocation.method(
            #create,
            [params],
          ),
        ),
      ) as _i5.Reservation);
  @override
  _i5.Reservation createFromModel(_i4.ReservationModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #createFromModel,
          [model],
        ),
        returnValue: _FakeReservation_3(
          this,
          Invocation.method(
            #createFromModel,
            [model],
          ),
        ),
      ) as _i5.Reservation);
}
